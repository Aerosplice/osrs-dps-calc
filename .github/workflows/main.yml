name: Main

on:
  # Push to any branch
  push:
  # PR to main branch
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'yarn'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn
      - name: Build project
        run: yarn build
      - uses: actions/upload-artifact@v3
        # We only need to upload an artifact if this is a push to the main branch
        if: github.ref == 'refs/heads/main'
        with:
          name: output
          path: out/

  deploy:
    env:
      GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
    needs: build
    # Ensure that we only deploy when pushing to the main branch
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: output
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: 'Setup Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - name: 'Sync build output to GCS bucket'
        run: |-
          gsutil -m rsync -r out gs://$GCS_BUCKET